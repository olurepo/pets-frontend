{"version":3,"file":"667.bundle.js","mappings":"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","sources":["webpack://transformer-viz/./src/components/lib/attention-map/lib/attention-map.tsx","webpack://transformer-viz/./src/components/lib/attention-map/lib/attention-map-container.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport styled from '@emotion/styled';\n\nimport Chart from '../../chart';\nimport { BACKEND_URL } from '../../../../utils';\n\ninterface AttentionScoresType {\n    toTokenId: number,\n    value: number,\n}\n\ninterface TokenType {\n    id: number;\n    word: string;\n}\n\ninterface LinkType {\n    from: number;\n    to: number;\n    weight: number;\n    visible: boolean;\n}\n\nconst CELL_HEIGHT = 40;\nconst CELL_WIDTH = 150;\nconst TO_TOKEN_X_POSITION = 300;\nconst FROM_TOKEN_X_POSITION = 10;\nconst CELL_PADDING = 10;\nconst STROKE_COLOR = 'cornflowerblue';\nconst BORDER_COLOR = 'black';\nconst ATTENTION_SCORE_POSITION = TO_TOKEN_X_POSITION + CELL_WIDTH;\n\nconst FilterContainer = styled.div`\n    width: 70%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    margin-bottom: 20px;\n`;\n\ninterface AttentionMapProps {\n  layer: number | string;\n  head: number | string;\n  id: string;\n  model: string;\n}\n\nexport const AttentionMap = ({ layer, head, id, model }: AttentionMapProps) => {\n  const [attentionScores, setAttentionScores] = useState<AttentionScoresType[]>([]);\n  const [from, setFrom] = useState<TokenType[]>([]);\n  const [to, setTo] = useState<TokenType[]>([]);\n  const [links, setLinks] = useState<LinkType[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadError, setLoadError] = useState<boolean>(false);\n\n  useEffect(() => {\n    async function fetchData() {\n        const URL = `${BACKEND_URL}/attention-score?layerNumber=${layer}&headNumber=${head}&instance=${id}&model=${model}`;\n        try {\n          setLoading(true);\n\n          const response = await axios(URL);\n          if (response.data === '') throw new Error('Empty response');\n\n          setFrom(response.data.from);\n          setTo(response.data.to);\n          setLinks(response.data.links);\n        } catch (error) {\n          setLoading(false);\n          setLoadError(true);\n        }\n    }\n    fetchData();\n  }, [head, id, layer, model]);\n\n  useEffect(() => {\n    if (from.length > 0) {\n        setLoading(false);\n    }\n  }, [from]);\n\n  // TODO: OPTTIMIZE IF NEEDED\n  const handleTokenMouseOver = (currentTokenId: number) => {\n    setLinks((prevLinks) => prevLinks.map((link: LinkType) => {\n      if (link.from !== currentTokenId) {\n        return {\n          ...link,\n          visible: false,\n        };\n      }\n\n      return link;\n    }));\n\n    setAttentionScores(() => links.reduce((currentLinks, currentLink) => {\n        if (currentLink.from === currentTokenId) {\n            return [\n                ...currentLinks,\n                {\n                    toTokenId: currentLink.to,\n                    value: currentLink.weight,\n                },\n            ];\n        }\n\n        return currentLinks;\n      }, []));\n  };\n\n  const handleTokenMouseOut = () => {\n    setLinks((prevLinks) => prevLinks.map((link) => ({\n      ...link,\n      visible: true,\n    })));\n    setAttentionScores([]);\n  };\n\n  const renderFromTokens = () => from.map((fromToken) => (\n    <g>\n      <rect\n        width={CELL_WIDTH}\n        height={CELL_HEIGHT}\n        fill=\"white\"\n        stroke={BORDER_COLOR}\n        x={FROM_TOKEN_X_POSITION}\n        y={fromToken.id * CELL_HEIGHT}\n        onMouseEnter={() => handleTokenMouseOver(fromToken.id)}\n        onMouseLeave={() => handleTokenMouseOut()}\n      />\n      <text\n        x={FROM_TOKEN_X_POSITION + CELL_PADDING}\n        y={fromToken.id * CELL_HEIGHT + (CELL_HEIGHT / 1.5)}\n      >\n        {fromToken.word}\n      </text>\n    </g>\n  ));\n\n  const renderToTokens = () => to.map((toToken) => (\n    <g>\n      <text\n        x={TO_TOKEN_X_POSITION + CELL_PADDING}\n        y={toToken.id * CELL_HEIGHT + (CELL_HEIGHT / 1.5)}\n      >\n        {toToken.word}\n      </text>\n      <rect\n        width={CELL_WIDTH}\n        height={CELL_HEIGHT}\n        fill=\"none\"\n        stroke={BORDER_COLOR}\n        x={TO_TOKEN_X_POSITION}\n        y={toToken.id * CELL_HEIGHT}\n      />\n    </g>\n  ));\n\n  const renderAttentionScores = () => attentionScores.map((score) => (\n    <g>\n      <rect\n        width={50}\n        height={CELL_HEIGHT}\n        fill=\"grey\"\n        stroke={BORDER_COLOR}\n        x={ATTENTION_SCORE_POSITION}\n        y={score.toTokenId * CELL_HEIGHT}\n      />\n      <text\n        x={ATTENTION_SCORE_POSITION + CELL_PADDING}\n        y={score.toTokenId * CELL_HEIGHT + (CELL_HEIGHT / 1.5)}\n      >\n        {score.value}\n      </text>\n    </g>\n  ));\n\n  const renderLinks = () => links.map((link) => (\n    link.visible\n    && (\n    <line\n      x1={CELL_WIDTH + CELL_PADDING}\n      x2={TO_TOKEN_X_POSITION}\n      y1={link.from * CELL_HEIGHT + (CELL_HEIGHT / 2)}\n      y2={link.to * CELL_HEIGHT + (CELL_HEIGHT / 2)}\n      stroke={STROKE_COLOR}\n      strokeWidth={link.weight}\n    />\n    )\n  ));\n\n  return (\n    <>\n      {(!loading && loadError) && <p>Failed to load attention map</p>}\n      {(loading && !loadError) && <CircularProgress />}\n      {\n        (!loading && !loadError)\n        && (\n          <Chart\n            dimensions={{\n                    width: 600,\n                    height: from.length * 50,\n                    margin: {\n                    top: 20,\n                    bottom: 20,\n                    left: 20,\n                    right: 20,\n                    },\n                }}\n          >\n            {renderFromTokens()}\n            {renderToTokens()}\n            {attentionScores.length > 0 && renderAttentionScores()}\n            {renderLinks()}\n          </Chart>\n        )\n    }\n    </>\n  );\n};\n\nexport default AttentionMap;\n","import React, { useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { Box, Chip, FormControl, InputLabel, MenuItem, OutlinedInput, Select, SelectChangeEvent, Theme, Typography, useTheme } from '@mui/material';\nimport styled from '@emotion/styled';\n\nimport AttentionMap from './attention-map';\n\nconst FilterContainer = styled.div`\n    width: 70%;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    margin-bottom: 20px;\n`;\n\nconst ChartContainer = styled.div`\n    width: 70%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n`;\n\nfunction useQuery() {\n    const { search } = useLocation();\n\n    return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n\nconst mapOptions = [\n  'Pre-trained',\n  'Fine-tuned',\n  'Pre-trained Adversarial',\n  'Fine-tuned Adversarial',\n];\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nfunction getStyles(name: string, mapVariations: readonly string[], theme: Theme) {\n  return {\n    fontWeight:\n    mapVariations.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  };\n}\n\nexport const AttentionMapContainer = () => {\n    const { id } = useParams();\n    const query = useQuery();\n    const theme = useTheme();\n\n    const [layer, setLayer] = useState<number | string>(query.get('layer') ?? 1);\n    const [head, setHead] = useState<number | string>(query.get('head') ?? 1);\n    const [mapVariations, setMapVariations] = React.useState<string[]>(['Pre-trained']);\n\n    const handleChangeVariations = (event: SelectChangeEvent<typeof mapVariations>) => {\n      const {\n        target: { value },\n      } = event;\n      const valueArray = typeof value === 'string' ? value.split(',') : value;\n      if (valueArray.length <= 2) {\n        setMapVariations(valueArray);\n      }\n    };\n\n    const calculatePairId = () => {\n      const currentId = parseInt(id ?? '0', 10);\n      const isEven = currentId % 2 === 0;\n      return (isEven ? currentId + 1 : currentId - 1);\n    };\n\n  return (\n    <>\n      <FilterContainer>\n        <FormControl variant=\"filled\" sx={{ m: 1, minWidth: 300 }}>\n          <InputLabel id=\"layer-input\">Layer</InputLabel>\n          <Select\n            labelId=\"layer-input\"\n            value={layer}\n            label=\"Layer\"\n            onChange={(event) => {\n                    setLayer(event.target.value);\n                }}\n          >\n            {Array.from(Array(12).keys()).map((number) => <MenuItem value={number}>{number}</MenuItem>)}\n          </Select>\n        </FormControl>\n        <FormControl variant=\"filled\" sx={{ m: 1, minWidth: 300 }}>\n          <InputLabel id=\"head-input\">Head</InputLabel>\n          <Select\n            labelId=\"head-input\"\n            value={head}\n            label=\"Head\"\n            onChange={(event) => {\n                setHead(event.target.value);\n            }}\n          >\n            {Array.from(Array(12).keys()).map((number) => <MenuItem value={number}>{number}</MenuItem>)}\n          </Select>\n        </FormControl>\n        <FormControl sx={{ m: 1, width: 300 }}>\n          <InputLabel id=\"map-variations\">Map Variations</InputLabel>\n          <Select\n            labelId=\"map-variations\"\n            multiple\n            value={mapVariations}\n            onChange={handleChangeVariations}\n            input={<OutlinedInput id=\"select-multiple-chip\" label=\"Chip\" />}\n            renderValue={(selected) => (\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                {selected.map((value) => (\n                  <Chip key={value} label={value} />\n                ))}\n              </Box>\n            )}\n            MenuProps={MenuProps}\n          >\n            {mapOptions.map((name) => (\n              <MenuItem\n                key={name}\n                value={name}\n                style={getStyles(name, mapVariations, theme)}\n              >\n                {name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </FilterContainer>\n      <ChartContainer>\n        {\n          mapVariations.includes('Pre-trained')\n          && (\n          <div>\n            <Typography>Pre-Trained Attentions</Typography>\n            <AttentionMap\n              layer={layer}\n              head={head}\n              id={id ?? '1'}\n              model=\"pretrained\"\n            />\n          </div>\n          )\n        }\n        {\n          mapVariations.includes('Fine-tuned')\n          && (\n          <div>\n            <Typography>Fine-tuned Attentions</Typography>\n            <AttentionMap\n              layer={layer}\n              head={head}\n              id={id ?? '1'}\n              model=\"fineTuned\"\n            />\n          </div>\n          )\n        }\n        {\n          mapVariations.includes('Pre-trained Adversarial')\n          && (\n          <div>\n            <Typography>Pre-trained Adversarial Pair</Typography>\n            <AttentionMap\n              layer={layer}\n              head={head}\n              id={calculatePairId().toString()}\n              model=\"pretrained\"\n            />\n          </div>\n          )\n        }\n        {\n          mapVariations.includes('Fine-tuned Adversarial',)\n          && (\n          <div>\n            <Typography>Fine-tuned Adversarial Pair</Typography>\n            <AttentionMap\n              layer={layer}\n              head={head}\n              id={calculatePairId().toString()}\n              model=\"fineTuned\"\n            />\n          </div>\n          )\n        }\n      </ChartContainer>\n    </>\n  );\n};\n\nexport default AttentionMapContainer;\n"],"names":["CELL_HEIGHT","BORDER_COLOR","layer","head","id","model","useState","attentionScores","setAttentionScores","from","setFrom","to","setTo","links","setLinks","loading","setLoading","loadError","setLoadError","useEffect","URL","response","data","Error","fetchData","length","CircularProgress","dimensions","width","height","margin","top","bottom","left","right","map","fromToken","fill","stroke","x","y","onMouseEnter","currentTokenId","prevLinks","link","visible","reduce","currentLinks","currentLink","toTokenId","value","weight","onMouseLeave","FROM_TOKEN_X_POSITION","word","toToken","TO_TOKEN_X_POSITION","score","ATTENTION_SCORE_POSITION","x1","CELL_WIDTH","x2","y1","y2","strokeWidth","ChartContainer","mapOptions","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","getStyles","name","mapVariations","theme","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","AttentionMapContainer","search","query","URLSearchParams","useTheme","get","setLayer","setHead","setMapVariations","calculatePairId","currentId","parseInt","FormControl","variant","sx","m","minWidth","InputLabel","Select","labelId","label","onChange","event","target","Array","keys","number","MenuItem","multiple","valueArray","split","input","OutlinedInput","renderValue","selected","Box","display","flexWrap","gap","Chip","includes","Typography","toString"],"sourceRoot":""}